services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_URL: ${BACKEND_URL}
        VITE_SOCKETS_URL: ${SOCKETS_URL}
        VITE_BACKEND_PORT: ${BACKEND_PORT}
        VITE_SOCKETS_PORT: ${SOCKETS_PORT}
    ports:
      - "3000:3000"
    depends_on:
      - app
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./frontend/nginx.dev.conf:/etc/nginx/conf.d/default.conf

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - db
    environment:
      - IS_PRODUCTION=false
      - PORT=${BACKEND_PORT}
      # Single connection string for local database
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@mysql-container:3306/wallet_tracker
      # This is to test the remote database in dev. Change IS_PRODUCTION to true to use the remote database
      - REMOTE_DB_URL=${REMOTE_DB_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_IN_SECONDS=${JWT_EXPIRATION_IN_SECONDS}

  websockets:
    build:
      context: ./sockets
      dockerfile: Dockerfile
    ports:
      - "${SOCKETS_PORT}:${SOCKETS_PORT}"
    environment:
      - PORT=${SOCKETS_PORT}
      - FRONTEND_URL=${FRONTEND_URL}

  db:
    # Dev environment database
    image: mysql:8
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: wallet_tracker
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data:
