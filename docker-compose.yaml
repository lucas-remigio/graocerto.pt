services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        BACKEND_URL: ${SOCKETS_URL}
        SOCKETS_URL: ${BACKEND_URL}
        BACKEND_PORT: ${BACKEND_PORT}
        SOCKETS_PORT: ${SOCKETS_PORT}
        IS_PRODUCTION: false
    ports:
      - "3000:3000"
    depends_on:
      - app
    environment:
      - NODE_ENV=development

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - IS_PRODUCTION=false
      - PORT=${BACKEND_PORT}
        # Single connection string for local database
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/wallet_tracker?sslmode=disable
      # This is to test the remote database in dev. Change IS_PRODUCTION to true to use the remote database
      - REMOTE_DB_URL=${REMOTE_DB_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_IN_SECONDS=${JWT_EXPIRATION_IN_SECONDS}

  websockets:
    build:
      context: ./sockets
      dockerfile: Dockerfile
    ports:
      - "${SOCKETS_PORT}:${SOCKETS_PORT}"
    environment:
      - PORT=${SOCKETS_PORT}
      - FRONTEND_URL=${FRONTEND_URL}

  db:
    image: postgres:16
    container_name: postgres-container
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: wallet_tracker
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 0.5s
      timeout: 5s
      retries: 20

  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: wallet_tracker
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql

volumes:
  postgres_data:
  mysql_data:
