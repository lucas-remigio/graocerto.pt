name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Frontend Image
        run: |
          docker build -f frontend/Dockerfile \
            --build-arg VITE_BACKEND_URL=${{ vars.BACKEND_URL }} \
            --build-arg VITE_SOCKETS_URL=${{ vars.SOCKETS_URL }} \
            -t lucasremigio/frontend:${{ github.sha }} ./frontend

      - name: Build Backend Image
        run: |
          docker build -f backend/Dockerfile -t lucasremigio/app:${{ github.sha }} ./backend

      - name: Build Websocket Image
        run: |
          docker build -f sockets/Dockerfile -t lucasremigio/websockets:${{ github.sha }} ./sockets

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Frontend Image
        run: docker push lucasremigio/frontend:${{ github.sha }}

      - name: Push Backend Image
        run: docker push lucasremigio/app:${{ github.sha }}

      - name: Push Websocket Image
        run: docker push lucasremigio/websockets:${{ github.sha }}

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose file to VPS
        run: scp -o StrictHostKeyChecking=no docker-compose.prod.yaml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/docker-compose.prod.yaml

      - name: Deploy to VPS
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'

            # On the server, only save the tag, in case we need to restart manually
            cat > .env << EOL

            TAG=${{ github.sha }}
            SOCKETS_PORT=${{ vars.SOCKETS_PORT }}
            FRONTEND_URL=${{ vars.FRONTEND_URL }}
            BACKEND_PORT=${{ vars.BACKEND_PORT }}
            BACKEND_URL=${{ vars.BACKEND_URL }}
            SOCKETS_URL=${{ vars.SOCKETS_URL }}
            FRONTEND_DOMAIN=${{ secrets.FRONTEND_DOMAIN }}
            
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
            REMOTE_DB_URL=${{ secrets.REMOTE_DB_URL }}
            
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION_IN_SECONDS=${{ secrets.JWT_EXPIRATION_IN_SECONDS }}
            EOL

            docker image prune -a -f
             
            docker pull lucasremigio/frontend:${{ github.sha }}
            docker pull lucasremigio/app:${{ github.sha }}
            docker pull lucasremigio/websockets:${{ github.sha }} 

            docker compose -f docker-compose.prod.yaml up -d
          EOF
